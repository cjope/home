{"version":3,"sources":["Sidebar.js","Main.js","App.js","index.js"],"names":["Sidebar","notes","onAddNote","onDeleteNote","activeNote","setActiveNote","sortedNotes","sort","a","b","lastModified","className","onClick","map","i","id","title","body","e","substr","Date","toLocaleDateString","hour","minute","Main","onUpdateNote","onEditField","field","value","now","type","placeholder","onChange","target","autoFocus","App","useState","localStorage","JSON","parse","setNotes","useEffect","setItem","stringify","newNote","uuid","noteId","filter","find","updatedNote","updatedNotesArr","note","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAsEiBA,EAzCD,SAAC,GAMR,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,WACAC,EACI,EADJA,cAEMC,EAAcL,EAAMM,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,aAAeF,EAAEE,gBAE5D,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,uCACA,wBAAQC,QAASV,EAAjB,oBAEF,qBAAKS,UAAU,oBAAf,SACGL,EAAYO,KAAI,WAAoCC,GAApC,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAMP,EAApB,EAAoBA,aAApB,OACf,sBACEC,UAAS,2BAAsBI,IAAOX,GAAc,UACpDQ,QAAS,kBAAMP,EAAcU,IAF/B,UAIE,sBAAKJ,UAAU,qBAAf,UACE,iCAASK,IACT,wBAAQJ,QAAS,SAACM,GAAD,OAAOf,EAAaY,IAArC,uBAGF,4BAAIE,GAAQA,EAAKE,OAAO,EAAG,KAAO,QAClC,wBAAOR,UAAU,YAAjB,0BACgB,IACb,IAAIS,KAAKV,GAAcW,mBAAmB,QAAS,CAClDC,KAAM,UACNC,OAAQ,2B,cCAXC,EAvCF,SAAC,GAAkC,IAAhCpB,EAA+B,EAA/BA,WAAYqB,EAAmB,EAAnBA,aACpBC,EAAc,SAACC,EAAOC,GAAW,IAAD,EACpCH,EAAa,2BACRrB,GADO,uBAETuB,EAAQC,GAFC,6BAGIR,KAAKS,OAHT,MAOd,OAAKzB,EAGH,sBAAKO,UAAU,WAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,uBACEmB,KAAK,OACLf,GAAG,QACHgB,YAAY,aACZH,MAAOxB,EAAWY,MAClBgB,SAAU,SAACd,GAAD,OAAOQ,EAAY,QAASR,EAAEe,OAAOL,QAC/CM,WAAS,IAEX,0BACEnB,GAAG,OACHgB,YAAY,0BACZH,MAAOxB,EAAWa,KAClBe,SAAU,SAACd,GAAD,OAAOQ,EAAY,OAAQR,EAAEe,OAAOL,aAGlD,sBAAKjB,UAAU,wBAAf,UACE,oBAAIA,UAAU,gBAAd,SAA+BP,EAAWY,QAC1C,mBAAGL,UAAU,mBAAb,SACGP,EAAWa,aAvBI,qBAAKN,UAAU,iBAAf,6BCiFXwB,MAxDf,WAAgB,IAAD,EACaC,mBACxBC,aAAapC,MAAQqC,KAAKC,MAAMF,aAAapC,OAAS,IAF3C,mBACNA,EADM,KACCuC,EADD,OAIuBJ,oBAAS,GAJhC,mBAINhC,EAJM,KAIMC,EAJN,KA0Cb,OApCAoC,qBAAU,WACRJ,aAAaK,QAAQ,QAASJ,KAAKK,UAAU1C,MAC5C,CAACA,IAmCF,sBAAKU,UAAU,MAAf,UACE,cAAC,EAAD,CACEV,MAAOA,EACPC,UApCY,WAChB,IAAM0C,EAAU,CACd7B,GAAI8B,MACJ7B,MAAO,gBACPC,KAAM,GACNP,aAAcU,KAAKS,OAGrBW,EAAS,CAACI,GAAF,mBAAc3C,KACtBI,EAAcuC,EAAQ7B,KA4BlBZ,aAzBe,SAAC2C,GACpBN,EAASvC,EAAM8C,QAAO,qBAAGhC,KAAgB+B,OAyBrC1C,WAAYA,EACZC,cAAeA,IAEjB,cAAC,EAAD,CAAMD,WAZDH,EAAM+C,MAAK,qBAAGjC,KAAgBX,KAYAqB,aAzBlB,SAACwB,GACpB,IAAMC,EAAkBjD,EAAMY,KAAI,SAACsC,GACjC,OAAIA,EAAKpC,KAAOkC,EAAYlC,GACnBkC,EAGFE,KAGTX,EAASU,UCtFbE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bc666d99.chunk.js","sourcesContent":["// function Sidebar({notes,onAddNote,onDeleteNote, activeNote, setActiveNote}){\n\n//     return <div className=\"app-sidebar\" >\n//                 <div className=\"app-sidebar-header\" >\n//                     <h1>Notes</h1>\n//                     <button onClick={onAddNote}>Add</button>\n//                 </div>            \n//                 <div className=\"app-sidebar-notes\" >\n//                     {notes.map((note)=>(\n//                     <div className={`app-sidebar-note ${note.id === activeNote && \"active\"}`} onClick={()=>setActiveNote(note.id)}>\n//                     <div className=\"sidebar-note-title\" >\n//                         <strong>{note.title}</strong>\n//                         <button onClick={()=>onDeleteNote(note.id)}>Delete</button>\n//                     </div>\n//                     <p>{note.body && note.body.substr(0, 100)+\"...\"}</p>\n//                     <small className=\"note-meta\" >Last Modified {new Date(note.lastModified).toLocaleDateString(\"en-US\",{\n                    \n//                         hour: \"2-digit\",\n//                         minute: \"2-digit\"\n//                     })}</small>\n//                 </div>                        \n//                     ))}\n//                 </div>\n//             </div>\n// }\n\n// export default Sidebar\n\n\nconst Sidebar = ({\n    notes,\n    onAddNote,\n    onDeleteNote,\n    activeNote,\n    setActiveNote,\n  }) => {\n    const sortedNotes = notes.sort((a, b) => b.lastModified - a.lastModified);\n  \n    return (\n      <div className=\"app-sidebar\">\n        <div className=\"app-sidebar-header\">\n          <h1>Notes</h1>\n          <button onClick={onAddNote}>Add</button>\n        </div>\n        <div className=\"app-sidebar-notes\">\n          {sortedNotes.map(({ id, title, body, lastModified }, i) => (\n            <div\n              className={`app-sidebar-note ${id === activeNote && \"active\"}`}\n              onClick={() => setActiveNote(id)}\n            >\n              <div className=\"sidebar-note-title\">\n                <strong>{title}</strong>\n                <button onClick={(e) => onDeleteNote(id)}>Delete</button>\n              </div>\n  \n              <p>{body && body.substr(0, 100) + \"...\"}</p>\n              <small className=\"note-meta\">\n                Last Modified{\" \"}\n                {new Date(lastModified).toLocaleDateString(\"en-GB\", {\n                  hour: \"2-digit\",\n                  minute: \"2-digit\",\n                })}\n              </small>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n  \n  export default Sidebar;","// function Main({activeNote}){\n    \n    \n//     return (\n//         <div className=\"app-main\">\n//             <div className=\"app-main-note-edit\">\n//             <input type=\"text\" id=\"title\" autoFocus />\n//             <textarea id=\"body\" placeholder=\"Write note here...\" />\n//             </div>\n//             <div className=\"app-main-note-preview\">\n//                 <h1 className=\"preview-title\">{activeNote.title}</h1>\n//                 <div className=\"markdown-preview\">note</div>\n//             </div>\n//         </div>\n//     )\n// }\n\n// export default Main\n\n// import ReactMarkdown from \"react-markdown\";\n\nconst Main = ({ activeNote, onUpdateNote }) => {\n  const onEditField = (field, value) => {\n    onUpdateNote({\n      ...activeNote,\n      [field]: value,\n      lastModified: Date.now(),\n    });\n  };\n\n  if (!activeNote) return <div className=\"no-active-note\">No Active Note</div>;\n\n  return (\n    <div className=\"app-main\">\n      <div className=\"app-main-note-edit\">\n        <input\n          type=\"text\"\n          id=\"title\"\n          placeholder=\"Note Title\"\n          value={activeNote.title}\n          onChange={(e) => onEditField(\"title\", e.target.value)}\n          autoFocus\n        />\n        <textarea\n          id=\"body\"\n          placeholder=\"Write your note here...\"\n          value={activeNote.body}\n          onChange={(e) => onEditField(\"body\", e.target.value)}\n        />\n      </div>\n      <div className=\"app-main-note-preview\">\n        <h1 className=\"preview-title\">{activeNote.title}</h1>\n        <p className=\"markdown-preview\">\n          {activeNote.body}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Main;","import { useState, useEffect } from 'react'\nimport uuid from 'react-uuid'\nimport './App.css'\nimport Sidebar from './Sidebar'\nimport Main from './Main'\n\n\n// function App() {\n\n//   const [notes, setNotes]=useState([])\n//   const [activeNote, setActiveNote]=useState(false)\n\n//   const onAddNote = () => {\n//     const newNote = {\n//       id: uuid(),\n//       title:\"Untitled Note\",\n//       body:\"\",\n//       lastModified:Date.now(),\n//     }\n//     setNotes([newNote, ...notes])\n//     setActiveNote(newNote.id)\n//   }\n\n//   const onDeleteNote = (idToDelete) => {\n//     setNotes(notes.filter((note)=> note.id !== idToDelete))\n//   }\n\n//   const getActiveNote = () => {\n//     return notes.find((note) => note.id === activeNote)\n//   }\n\n\n//   return (\n//     <div className=\"App\">\n//     <Sidebar \n//     notes={notes} \n//     onAddNote={onAddNote} \n//     onDeleteNote={onDeleteNote} \n//     activeNote={activeNote} \n//     setActiveNote={setActiveNote}/>\n\n//     <Main activeNote={getActiveNote()}/>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n// import { useEffect, useState } from \"react\";\n// import uuid from \"react-uuid\";\n// import \"./App.css\";\n// import Main from \"./main/Main\";\n// import Sidebar from \"./sidebar/Sidebar\";\n\nfunction App() {\n  const [notes, setNotes] = useState(\n    localStorage.notes ? JSON.parse(localStorage.notes) : []\n  );\n  const [activeNote, setActiveNote] = useState(false);\n\n  useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n\n  const onAddNote = () => {\n    const newNote = {\n      id: uuid(),\n      title: \"Untitled Note\",\n      body: \"\",\n      lastModified: Date.now(),\n    };\n\n    setNotes([newNote, ...notes]);\n    setActiveNote(newNote.id);\n  };\n\n  const onDeleteNote = (noteId) => {\n    setNotes(notes.filter(({ id }) => id !== noteId));\n  };\n\n  const onUpdateNote = (updatedNote) => {\n    const updatedNotesArr = notes.map((note) => {\n      if (note.id === updatedNote.id) {\n        return updatedNote;\n      }\n\n      return note;\n    });\n\n    setNotes(updatedNotesArr);\n  };\n\n  const getActiveNote = () => {\n    return notes.find(({ id }) => id === activeNote);\n  };\n\n  return (\n    <div className=\"App\">\n      <Sidebar\n        notes={notes}\n        onAddNote={onAddNote}\n        onDeleteNote={onDeleteNote}\n        activeNote={activeNote}\n        setActiveNote={setActiveNote}\n      />\n      <Main activeNote={getActiveNote()} onUpdateNote={onUpdateNote} />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}