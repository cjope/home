{"version":3,"sources":["Sidebar.js","App.js","index.js"],"names":["Sidebar","notes","onAddNote","onDeleteNote","activeNote","setActiveNote","sortedNotes","sort","a","b","lastModified","className","onClick","map","i","id","title","body","e","substr","Date","toLocaleDateString","hour","minute","App","useState","localStorage","JSON","parse","setNotes","useEffect","setItem","stringify","newNote","uuid","now","noteId","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAqCiBA,MArCjB,YAA+E,IAA5DC,EAA2D,EAA3DA,MAAOC,EAAoD,EAApDA,UAAWC,EAAyC,EAAzCA,aAAaC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,cAEtDC,EAAcL,EAAMM,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,aAAeF,EAAEE,gBAE5D,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,0CACA,wBAAQC,QAASV,EAAjB,oBAEF,qBAAKS,UAAU,oBAAf,SACGL,EAAYO,KAAI,WAAoCC,GAApC,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAMP,EAApB,EAAoBA,aAApB,OACf,sBACEC,UAAS,2BAAsBI,IAAOX,GAAc,UACpDQ,QAAS,kBAAMP,EAAcU,IAF/B,UAIE,sBAAKJ,UAAU,qBAAf,UACE,iCAASK,IACT,wBAAQJ,QAAS,SAACM,GAAD,OAAOf,EAAaY,IAArC,uBAGF,4BAAIE,GAAQA,EAAKE,OAAO,EAAG,KAAO,QAClC,wBAAOR,UAAU,YAAjB,0BACgB,IACb,IAAIS,KAAKV,GAAcW,mBAAmB,QAAS,CAClDC,KAAM,UACNC,OAAQ,2BCwCTC,MA3Df,WAAgB,IAAD,EACaC,mBACxBC,aAAazB,MAAQ0B,KAAKC,MAAMF,aAAazB,OAAS,IAF3C,mBACNA,EADM,KACC4B,EADD,OAIuBJ,oBAAS,GAJhC,mBAINrB,EAJM,KAIMC,EAJN,KA0Cb,OApCAyB,qBAAU,WACRJ,aAAaK,QAAQ,QAASJ,KAAKK,UAAU/B,MAC5C,CAACA,IAmCF,qBAAKU,UAAU,MAAf,SAIE,cAAC,EAAD,CACEV,MAAOA,EACPC,UAvCY,WAChB,IAAM+B,EAAU,CACdlB,GAAImB,MACJlB,MAAO,gBACPC,KAAM,GACNP,aAAcU,KAAKe,OAGrBN,EAAS,CAACI,GAAF,mBAAchC,KACtBI,EAAc4B,EAAQlB,KA+BlBZ,aA5Be,SAACiC,GACpBP,EAAS5B,EAAMoC,QAAO,qBAAGtB,KAAgBqB,OA4BrChC,WAAYA,EACZC,cAAeA,OCvDvBiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9eef055e.chunk.js","sourcesContent":["function Sidebar({ notes, onAddNote, onDeleteNote,activeNote, setActiveNote}) {\n\n  const sortedNotes = notes.sort((a, b) => b.lastModified - a.lastModified);\n  \n  return (\n    <div className=\"app-sidebar\">\n      <div className=\"app-sidebar-header\">\n        <h1>Comments</h1>\n        <button onClick={onAddNote}>Add</button>\n      </div>\n      <div className=\"app-sidebar-notes\">\n        {sortedNotes.map(({ id, title, body, lastModified }, i) => (\n          <div\n            className={`app-sidebar-note ${id === activeNote && \"active\"}`}\n            onClick={() => setActiveNote(id)}\n          >\n            <div className=\"sidebar-note-title\">\n              <strong>{title}</strong>\n              <button onClick={(e) => onDeleteNote(id)}>Delete</button>\n            </div>\n\n            <p>{body && body.substr(0, 100) + \"...\"}</p>\n            <small className=\"note-meta\">\n              Last Modified{\" \"}\n              {new Date(lastModified).toLocaleDateString(\"en-GB\", {\n                hour: \"2-digit\",\n                minute: \"2-digit\",\n              })}\n            </small>\n          </div>\n        ))}\n      </div>\n    </div>\n  \n  );\n};\n  \n  export default Sidebar;","import { useState, useEffect } from 'react'\nimport uuid from 'react-uuid'\nimport './App.css'\nimport Sidebar from './Sidebar'\n// import Main from './Main'\n// import Home from './Home'\n\nfunction App() {\n  const [notes, setNotes] = useState(\n    localStorage.notes ? JSON.parse(localStorage.notes) : []\n  );\n  const [activeNote, setActiveNote] = useState(false);\n\n  useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n\n  const onAddNote = () => {\n    const newNote = {\n      id: uuid(),\n      title: \"Untitled Note\",\n      body: \"\",\n      lastModified: Date.now(),\n    };\n\n    setNotes([newNote, ...notes]);\n    setActiveNote(newNote.id);\n  };\n\n  const onDeleteNote = (noteId) => {\n    setNotes(notes.filter(({ id }) => id !== noteId));\n  };\n\n  // const onUpdateNote = (updatedNote) => {\n  //   const updatedNotesArr = notes.map((note) => {\n  //     if (note.id === updatedNote.id) {\n  //       return updatedNote;\n  //     }\n\n  //     return note;\n  //   });\n\n  //   setNotes(updatedNotesArr);\n  // };\n\n  // const getActiveNote = () => {\n  //   return notes.find(({ id }) => id === activeNote);\n  // };\n\n  return (\n    <div className=\"App\">\n\n      {/* <Home/> */}\n\n      <Sidebar\n        notes={notes}\n        onAddNote={onAddNote}\n        onDeleteNote={onDeleteNote}\n        activeNote={activeNote}\n        setActiveNote={setActiveNote}\n      />\n      {/* <Main activeNote={getActiveNote()} onUpdateNote={onUpdateNote} /> */}\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}